name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: Install dependencies
      run: |
        npm install

    - name: Make jest executable
      run: |
        chmod +x ./node_modules/.bin/jest

    - name: Run Tests with Coverage
      run: |
        npm test
      continue-on-error: false  # Fail the build if tests fail

    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-modules-

    - name: Lint Code
      run: |
        npx eslint . --fix

    - name: Deploy to Staging (If Tests Pass)
      run: |
        echo "Deploying to Staging Environment"
        # Add your staging deployment scripts/commands here
        # For example, a simple SSH deploy might look like:
        # ssh user@staging-server "cd /path/to/app && git pull && npm install && pm2 restart app"
      if: success()  # Only runs this step if previous steps (tests) are successful
